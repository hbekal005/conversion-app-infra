name: App_Infra_Deprovision
run-name: Conversion-App Infra Deprovision - ${{ inputs.Environment }}

on:
  workflow_dispatch:
    inputs:
      Environment:
        description: 'Input Environment to Deprovision'
        required: true
        type: choice
        default: "dev"
        options:
          - "dev"
          - "stg"
          - "prod"
  workflow_call:
    inputs:
      Environment:
        description: 'Input Environment to Deprovision'
        required: true
        type: string
        default: "dev"

jobs:
  App_Deploy:
    name: Deplpy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Infra Repository
        uses: actions/checkout@v4
      
      - name: Checkov Scan
        id: checkov-scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ${{ github.workspace }}/ecs-fargate-cluster
          output_format: cli,sarif
          output_file_path: console,checkov-results.sarif

      - name: Upload Checkov Results
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/ecs-fargate-cluster/
          name: checkov-results.sarif

      - name: Setup Terraform
        id: setup-terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.10'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{vars.AWS_REGION}}

      - name: Terraform Init for ECS Cluster
        id: terraform-ecs-init
        run: |
          cd ${{ github.workspace }}/ecs-fargate-cluster
          terraform init

      - name: Terraform Create or Switch Workspace for ECS Cluster
        if: success()
        id: terraform-ecs-workspace
        run: |
          cd ${{ github.workspace }}/ecs-fargate-cluster
          terraform workspace select ${{ inputs.Environment }} || terraform workspace new ${{ inputs.Environment }}
      
      - name: Terraform Validate for ECS Cluster
        if: success()
        id: terraform-ecs-validate
        run: |
          cd ${{ github.workspace }}/ecs-fargate-cluster
          terraform validate

      - name: Terraform Plan for ECS Cluster
        if: success()
        id: terraform-ecs-destroy
        run: |
          cd ${{ github.workspace }}/ecs-fargate-cluster
          terraform destroy -auto-approve \
            -var "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \